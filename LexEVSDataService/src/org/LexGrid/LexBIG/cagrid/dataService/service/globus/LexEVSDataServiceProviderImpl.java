package org.LexGrid.LexBIG.cagrid.dataService.service.globus;

import org.LexGrid.LexBIG.cagrid.dataService.service.LexEVSDataServiceImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the LexEVSDataServiceImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.2
 * 
 */
public class LexEVSDataServiceProviderImpl{
	
	LexEVSDataServiceImpl impl;
	
	public LexEVSDataServiceProviderImpl() throws RemoteException {
		impl = new LexEVSDataServiceImpl();
	}
	

    public org.LexGrid.LexBIG.cagrid.dataService.stubs.RegisterSecurityTokenResponse registerSecurityToken(org.LexGrid.LexBIG.cagrid.dataService.stubs.RegisterSecurityTokenRequest params) throws RemoteException {
    org.LexGrid.LexBIG.cagrid.dataService.stubs.RegisterSecurityTokenResponse boxedResult = new org.LexGrid.LexBIG.cagrid.dataService.stubs.RegisterSecurityTokenResponse();
    boxedResult.setLexEVSDataServiceReference(impl.registerSecurityToken(params.getCodingSchemeURN(),params.getSecurityToken().getSecurityToken()));
    return boxedResult;
  }

}
