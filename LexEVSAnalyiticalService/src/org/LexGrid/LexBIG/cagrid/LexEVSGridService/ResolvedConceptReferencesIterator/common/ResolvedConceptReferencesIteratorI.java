/*******************************************************************************
 * Copyright: (c) 2004-2007 Mayo Foundation for Medical Education and 
 * Research (MFMER). All rights reserved. MAYO, MAYO CLINIC, and the
 * triple-shield Mayo logo are trademarks and service marks of MFMER.
 * 
 * Except as contained in the copyright notice above, or as used to identify 
 * MFMER as the author of this software, the trade names, trademarks, service
 * marks, or product names of the copyright holder shall not be used in
 * advertising, promotion or otherwise in connection with this software without
 * prior written authorization of the copyright holder.
 *   
 * Licensed under the Eclipse Public License, Version 1.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 *   
 *  		http://www.eclipse.org/legal/epl-v10.html
 * 
 *  		
 *******************************************************************************/
package org.LexGrid.LexBIG.cagrid.LexEVSGridService.ResolvedConceptReferencesIterator.common;

import java.rmi.RemoteException;

/** 
 * This class is autogenerated, DO NOT EDIT.
 * 
 * This interface represents the API which is accessable on the grid service from the client. 
 * 
 * @created by Introduce Toolkit version 1.1
 * 
 */
public interface ResolvedConceptReferencesIteratorI {

  /**
   * Return the next available concept reference, in order, from the underlying list. Note: This is effectively the same as performing next(1), but eliminates the need to continually unwrap the concept reference from the resolved list.
   *
   * @throws InvalidServiceContextAccess
   *	
   * @throws LBResourceUnavailableException
   *	
   * @throws LBInvocationException
   *	
   */
  public org.LexGrid.LexBIG.iso21090.DataModel.Core.ResolvedConceptReference next() throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBResourceUnavailableException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException ;

  /**
   * Return concept references from the underlying list, in order and up to the specified maximum.
   *
   * @param maxToReturn
   * @throws InvalidServiceContextAccess
   *	
   * @throws LBResourceUnavailableException
   *	
   * @throws LBInvocationException
   *	
   */
  public org.LexGrid.LexBIG.iso21090.DataModel.Collections.ResolvedConceptReferenceList nextInt(int maxToReturn) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBResourceUnavailableException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException ;

  /**
   * Return concept references from the underlying list, from the start point (inclusive) to the end point (exclusive). Calling this method has no effect on the next() calls - next() will still iterate      * through the results in the same sequential order regardless of if this method has      * been used.      *       * the result of numberRemaining() is not affected by calls to this method.         *       * Note: This method may return fewer results than requested  even if there are still more results after the last result returned by the service. Note: The method is optional, and may not be implemented by all implementations. Note: Using this method in combination with Filters may cause significant performance reductions.
   *
   * @param start
   * @param end
   * @throws InvalidServiceContextAccess
   *	
   * @throws LBResourceUnavailableException
   *	
   * @throws LBInvocationException
   *	
   * @throws LBParameterException
   *	
   */
  public org.LexGrid.LexBIG.iso21090.DataModel.Collections.ResolvedConceptReferenceList get(int start,int end) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBResourceUnavailableException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException ;

  /**
   * Return the next batch of resolved concept references.
   *
   * @param maxToReturn
   * @throws InvalidServiceContextAccess
   *	
   * @throws LBResourceUnavailableException
   *	
   * @throws LBInvocationException
   *	
   */
  public void scroll(int maxToReturn) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBResourceUnavailableException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException ;

  public org.LexGrid.LexBIG.iso21090.DataModel.Collections.ResolvedConceptReferenceList getNext() throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBResourceUnavailableException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException ;

  /**
   * True means that there still values that can be returned. False means all values have already been returned.  
   *
   * @throws InvalidServiceContextAccess
   *	
   * @throws LBResourceUnavailableException
   *	
   */
  public boolean hasNext() throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBResourceUnavailableException ;

  /**
   * Returns a count of the number of items remaining in the iterator. This is optional, and may only be an estimate.  Implementations should  return -1 if they cannot count or estimate the number remaining. Note: This method is not affected by calls to get(int, int).  It only returns counts with respect to calls to next() or next(int).
   *
   * @throws InvalidServiceContextAccess
   *	
   * @throws LBResourceUnavailableException
   *	
   */
  public int numberRemaining() throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBResourceUnavailableException ;

  public org.oasis.wsrf.lifetime.DestroyResponse destroy(org.oasis.wsrf.lifetime.Destroy params) throws RemoteException ;

  public org.oasis.wsrf.lifetime.SetTerminationTimeResponse setTerminationTime(org.oasis.wsrf.lifetime.SetTerminationTime params) throws RemoteException ;

  public org.oasis.wsrf.properties.GetMultipleResourcePropertiesResponse getMultipleResourceProperties(org.oasis.wsrf.properties.GetMultipleResourceProperties_Element params) throws RemoteException ;

  public org.oasis.wsrf.properties.GetResourcePropertyResponse getResourceProperty(javax.xml.namespace.QName params) throws RemoteException ;

  public org.oasis.wsrf.properties.QueryResourcePropertiesResponse queryResourceProperties(org.oasis.wsrf.properties.QueryResourceProperties_Element params) throws RemoteException ;

}

