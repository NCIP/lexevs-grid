/*******************************************************************************
 * Copyright: (c) 2004-2007 Mayo Foundation for Medical Education and 
 * Research (MFMER). All rights reserved. MAYO, MAYO CLINIC, and the
 * triple-shield Mayo logo are trademarks and service marks of MFMER.
 * 
 * Except as contained in the copyright notice above, or as used to identify 
 * MFMER as the author of this software, the trade names, trademarks, service
 * marks, or product names of the copyright holder shall not be used in
 * advertising, promotion or otherwise in connection with this software without
 * prior written authorization of the copyright holder.
 *   
 * Licensed under the Eclipse Public License, Version 1.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 *   
 *  		http://www.eclipse.org/legal/epl-v10.html
 * 
 *  		
 *******************************************************************************/
package org.LexGrid.LexBIG.cagrid.LexEVSGridService.HistoryService.common;

import java.rmi.RemoteException;

/** 
 * This class is autogenerated, DO NOT EDIT.
 * 
 * This interface represents the API which is accessable on the grid service from the client. 
 * 
 * @created by Introduce Toolkit version 1.2
 * 
 */
public interface HistoryServiceI {

  /**
   * Return the list of change events identifying the immediate ancestors of the given concept reference.
   *
   * @param conceptReference
   * @throws InvalidServiceContextAccess
   *	
   * @throws LBParameterException
   *	
   * @throws LBInvocationException
   *	
   */
  public org.LexGrid.LexBIG.iso21090.DataModel.Collections.NCIChangeEventList getAncestors(org.LexGrid.LexBIG.iso21090.DataModel.Core.ConceptReference conceptReference) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException ;

  /**
   * Return a list of baselines supported by this service that were released on or after the first supplied date and were released on or before the second date. Returned baselines are arranged in sequential order, from earliest to latest.
   *
   * @param releasedAfter
   * @param releasedBefore
   * @throws InvalidServiceContextAccess
   *	
   * @throws LBParameterException
   *	
   * @throws LBInvocationException
   *	
   */
  public org.LexGrid.LexBIG.iso21090.DataModel.Collections.SystemReleaseList getBaselines(java.util.Date releasedAfter,java.util.Date releasedBefore) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException ;

  /**
   * Return a list of all of the coding scheme versions in which the supplied concept changed between the two supplied times (inclusive).
   *
   * @param conceptReference
   * @param beginDate
   * @param endDate
   * @throws InvalidServiceContextAccess
   *	
   * @throws LBParameterException
   *	
   * @throws LBInvocationException
   *	
   */
  public org.LexGrid.LexBIG.iso21090.DataModel.Collections.CodingSchemeVersionList getConceptChangeVersions(org.LexGrid.LexBIG.iso21090.DataModel.Core.ConceptReference conceptReference,java.util.Date beginDate,java.util.Date endDate) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException ;

  /**
   * Return the coding scheme version in which the supplied concept was created.
   *
   * @param conceptReference
   * @throws InvalidServiceContextAccess
   *	
   * @throws LBParameterException
   *	
   * @throws LBInvocationException
   *	
   */
  public org.LexGrid.iso21090.versions.CodingSchemeVersion getConceptCreationVersion(org.LexGrid.LexBIG.iso21090.DataModel.Core.ConceptReference conceptReference) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException ;

  /**
   * Return the list of change events identifying the immediate descendants of the given concept reference.
   *
   * @param conceptReference
   * @throws InvalidServiceContextAccess
   *	
   * @throws LBParameterException
   *	
   * @throws LBInvocationException
   *	
   */
  public org.LexGrid.LexBIG.iso21090.DataModel.Collections.NCIChangeEventList getDescendents(org.LexGrid.LexBIG.iso21090.DataModel.Core.ConceptReference conceptReference) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException ;

  /**
   * Return the earliest baseline version in the list.
   *
   * @throws InvalidServiceContextAccess
   *	
   * @throws LBInvocationException
   *	
   */
  public org.LexGrid.iso21090.versions.SystemRelease getEarliestBaseline() throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException ;

  /**
   * Return the list of available NCI-defined change events for the given concept and coding scheme version.
   *
   * @param conceptReference
   * @param releaseURN
   * @throws InvalidServiceContextAccess
   *	
   * @throws LBParameterException
   *	
   * @throws LBInvocationException
   *	
   */
  public org.LexGrid.LexBIG.iso21090.DataModel.Collections.NCIChangeEventList getEditActionList(org.LexGrid.LexBIG.iso21090.DataModel.Core.ConceptReference conceptReference,org.apache.axis.types.URI releaseURN) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException ;

  /**
   * Return the list of available NCI-defined change events for the given concept and date range.
   *
   * @param conceptReference
   * @param codingSchemeVersion
   * @throws InvalidServiceContextAccess
   *	
   * @throws LBParameterException
   *	
   * @throws LBInvocationException
   *	
   */
  public org.LexGrid.LexBIG.iso21090.DataModel.Collections.NCIChangeEventList getEditActionList2(org.LexGrid.LexBIG.iso21090.DataModel.Core.ConceptReference conceptReference,org.LexGrid.iso21090.versions.CodingSchemeVersion codingSchemeVersion) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException ;

  /**
   * Return the list of NCI-defined change events for the given concept and release; empty if not applicable.
   *
   * @param conceptReference
   * @param beginDate
   * @param endDate
   * @throws InvalidServiceContextAccess
   *	
   * @throws LBParameterException
   *	
   * @throws LBInvocationException
   *	
   */
  public org.LexGrid.LexBIG.iso21090.DataModel.Collections.NCIChangeEventList getEditActionList3(org.LexGrid.LexBIG.iso21090.DataModel.Core.ConceptReference conceptReference,java.util.Date beginDate,java.util.Date endDate) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException ;

  /**
   * Get the latest baseline in the list.
   *
   * @throws InvalidServiceContextAccess
   *	
   * @throws LBInvocationException
   *	
   */
  public org.LexGrid.iso21090.versions.SystemRelease getLatestBaseline() throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException ;

  /**
   * Return detailed information about the particular system release.
   *
   * @param releaseURN
   * @throws InvalidServiceContextAccess
   *	
   * @throws LBParameterException
   *	
   * @throws LBInvocationException
   *	
   */
  public org.LexGrid.LexBIG.iso21090.DataModel.InterfaceElements.SystemReleaseDetail getSystemRelease(org.apache.axis.types.URI releaseURN) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException ;

  public org.oasis.wsrf.lifetime.DestroyResponse destroy(org.oasis.wsrf.lifetime.Destroy params) throws RemoteException ;

  public org.oasis.wsrf.lifetime.SetTerminationTimeResponse setTerminationTime(org.oasis.wsrf.lifetime.SetTerminationTime params) throws RemoteException ;

  public org.oasis.wsrf.properties.GetMultipleResourcePropertiesResponse getMultipleResourceProperties(org.oasis.wsrf.properties.GetMultipleResourceProperties_Element params) throws RemoteException ;

  public org.oasis.wsrf.properties.GetResourcePropertyResponse getResourceProperty(javax.xml.namespace.QName params) throws RemoteException ;

  public org.oasis.wsrf.properties.QueryResourcePropertiesResponse queryResourceProperties(org.oasis.wsrf.properties.QueryResourceProperties_Element params) throws RemoteException ;

}

