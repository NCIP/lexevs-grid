/*******************************************************************************
 * Copyright: (c) 2004-2007 Mayo Foundation for Medical Education and 
 * Research (MFMER). All rights reserved. MAYO, MAYO CLINIC, and the
 * triple-shield Mayo logo are trademarks and service marks of MFMER.
 * 
 * Except as contained in the copyright notice above, or as used to identify 
 * MFMER as the author of this software, the trade names, trademarks, service
 * marks, or product names of the copyright holder shall not be used in
 * advertising, promotion or otherwise in connection with this software without
 * prior written authorization of the copyright holder.
 *   
 * Licensed under the Eclipse Public License, Version 1.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 *   
 *  		http://www.eclipse.org/legal/epl-v10.html
 * 
 *  		
 *******************************************************************************/
package org.LexGrid.LexBIG.cagrid.LexEVSGridService.common;

import java.rmi.RemoteException;

/** 
 * This class is autogenerated, DO NOT EDIT.
 * 
 * This interface represents the API which is accessable on the grid service from the client. 
 * 
 * @created by Introduce Toolkit version 1.1
 * 
 */
public interface LexEVSGridServiceI {

  /**
   * Return a list of coding schemes and versions that are supported by this service, along with their status.
   *
   * @throws LBInvocationException
   *	
   */
  public org.LexGrid.LexBIG.iso21090.DataModel.Collections.CodingSchemeRenderingList getSupportedCodingSchemes() throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException ;

  /**
   * Returns the set of all (or all active) concepts in the specified coding scheme.
   *
   * @param codingSchemeIdentification
   * @param versionOrTag
   * @throws LBException
   *	
   */
  public org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.client.CodedNodeSetClient getCodingSchemeConcepts(org.LexGrid.LexBIG.iso21090.DataModel.cagrid.CodingSchemeIdentification codingSchemeIdentification,org.LexGrid.LexBIG.iso21090.DataModel.Core.CodingSchemeVersionOrTag versionOrTag) throws RemoteException, org.apache.axis.types.URI.MalformedURIException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBException ;

  /**
   * Return detailed coding scheme information given a specific tag or version identifier.
   *
   * @param codingSchemeIdentification
   * @param versionOrTag
   * @throws LBException
   *	
   */
  public org.LexGrid.iso21090.codingSchemes.CodingScheme resolveCodingScheme(org.LexGrid.LexBIG.iso21090.DataModel.cagrid.CodingSchemeIdentification codingSchemeIdentification,org.LexGrid.LexBIG.iso21090.DataModel.Core.CodingSchemeVersionOrTag versionOrTag) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBException ;

  /**
   * Returns the full description of all supported match algorithms.
   *
   */
  public org.LexGrid.LexBIG.iso21090.DataModel.Collections.ModuleDescriptionList getMatchAlgorithms() throws RemoteException ;

  /**
   * Returns the node graph as represented in the particular relationship set in the coding scheme.
   *
   * @param codingSchemeIdentification
   * @param versionOrTag
   * @param relationContainerIdentification
   * @throws LBException
   *	
   */
  public org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeGraph.client.CodedNodeGraphClient getNodeGraph(org.LexGrid.LexBIG.iso21090.DataModel.cagrid.CodingSchemeIdentification codingSchemeIdentification,org.LexGrid.LexBIG.iso21090.DataModel.Core.CodingSchemeVersionOrTag versionOrTag,org.LexGrid.LexBIG.iso21090.DataModel.cagrid.RelationContainerIdentification relationContainerIdentification) throws RemoteException, org.apache.axis.types.URI.MalformedURIException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBException ;

  /**
   * Returns a description of all registered extensions used to provide additional sorting of query results in the given context. Note: The returned list will include any 'built-in' sort algorithms in addition to extensions externally packaged and registered to the service.
   *
   * @param context
   */
  public org.LexGrid.LexBIG.iso21090.DataModel.Collections.SortDescriptionList getSortAlgorithms(java.lang.String context) throws RemoteException ;

  /**
   * Returns a description of all registered extensions used to implement application-specific behavior that is centrally accessible from a LexBIGService.  Note that only generic extensions (base class GenericExtension) will be listed here. All other classes are retrievable at the appropriate interface point (filter, sort, etc).
   *
   */
  public org.LexGrid.LexBIG.iso21090.DataModel.Collections.ExtensionDescriptionList getGenericExtensions() throws RemoteException ;

  /**
   * Returns an instance of the application-specific extension registered with the given name.
   *
   * @param extensionIdentification
   * @throws LBException
   *	
   */
  public org.LexGrid.LexBIG.cagrid.LexEVSGridService.LexBIGServiceConvenienceMethods.client.LexBIGServiceConvenienceMethodsClient getGenericExtension(org.LexGrid.LexBIG.iso21090.DataModel.cagrid.ExtensionIdentification extensionIdentification) throws RemoteException, org.apache.axis.types.URI.MalformedURIException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBException ;

  /**
   *  Returns a description of all registered extensions used to provide additional filtering of query results.
   *
   */
  public org.LexGrid.LexBIG.iso21090.DataModel.Collections.ExtensionDescriptionList getFilterExtensions() throws RemoteException ;

  /**
   * Resolve a reference to the history api servicing the given coding scheme.
   *
   * @param codingSchemeIdentification
   * @throws LBException
   *	
   */
  public org.LexGrid.LexBIG.cagrid.LexEVSGridService.HistoryService.client.HistoryServiceClient getHistoryService(org.LexGrid.LexBIG.iso21090.DataModel.cagrid.CodingSchemeIdentification codingSchemeIdentification) throws RemoteException, org.apache.axis.types.URI.MalformedURIException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBException ;

  /**
   * Return an interface to perform system-wide query over metadata for loaded code systems and providers.
   *
   * @throws LBException
   *	
   */
  public org.LexGrid.LexBIG.cagrid.LexEVSGridService.LexBIGServiceMetadata.client.LexBIGServiceMetadataClient getServiceMetadata() throws RemoteException, org.apache.axis.types.URI.MalformedURIException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBException ;

  /**
   * Returns an instance of the sort extension registered with the given name.
   *
   * @param extensionIdentification
   * @throws LBException
   *	
   */
  public org.LexGrid.LexBIG.cagrid.LexEVSGridService.Sort.client.SortClient getSortAlgorithm(org.LexGrid.LexBIG.iso21090.DataModel.cagrid.ExtensionIdentification extensionIdentification) throws RemoteException, org.apache.axis.types.URI.MalformedURIException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBException ;

  /**
   * Returns an instance of the filter extension registered with the given name.
   *
   * @param extensionIdentification
   * @throws LBException
   *	
   */
  public org.LexGrid.LexBIG.cagrid.LexEVSGridService.Filter.client.FilterClient getFilter(org.LexGrid.LexBIG.iso21090.DataModel.cagrid.ExtensionIdentification extensionIdentification) throws RemoteException, org.apache.axis.types.URI.MalformedURIException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBException ;

  /**
   * Return coding scheme copyright given a specific tag or version identifier.
   *
   * @param codingSchemeIdentification
   * @param versionOrTag
   * @throws LBException
   *	
   */
  public org.LexGrid.LexBIG.iso21090.DataModel.cagrid.CodingSchemeCopyRight resolveCodingSchemeCopyright(org.LexGrid.LexBIG.iso21090.DataModel.cagrid.CodingSchemeIdentification codingSchemeIdentification,org.LexGrid.LexBIG.iso21090.DataModel.Core.CodingSchemeVersionOrTag versionOrTag) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBException ;

  /**
   * Sets the Security Token for the given Coding Scheme.
   *
   * @param codingSchemeIdentification
   * @param securityToken
   * @throws LBException
   *	
   */
  public org.LexGrid.LexBIG.cagrid.LexEVSGridService.client.LexEVSGridServiceClient setSecurityToken(org.LexGrid.LexBIG.iso21090.DataModel.cagrid.CodingSchemeIdentification codingSchemeIdentification,gov.nih.nci.evs.security.SecurityToken securityToken) throws RemoteException, org.apache.axis.types.URI.MalformedURIException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBException ;

  public org.oasis.wsrf.properties.GetMultipleResourcePropertiesResponse getMultipleResourceProperties(org.oasis.wsrf.properties.GetMultipleResourceProperties_Element params) throws RemoteException ;

  public org.oasis.wsrf.properties.GetResourcePropertyResponse getResourceProperty(javax.xml.namespace.QName params) throws RemoteException ;

  public org.oasis.wsrf.properties.QueryResourcePropertiesResponse queryResourceProperties(org.oasis.wsrf.properties.QueryResourceProperties_Element params) throws RemoteException ;

}

