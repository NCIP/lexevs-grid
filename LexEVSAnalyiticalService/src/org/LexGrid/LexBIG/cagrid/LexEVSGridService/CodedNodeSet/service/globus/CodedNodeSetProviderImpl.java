/*
* Copyright: (c) Mayo Foundation for Medical Education and
* Research (MFMER). All rights reserved. MAYO, MAYO CLINIC, and the
* triple-shield Mayo logo are trademarks and service marks of MFMER.
*
* Distributed under the OSI-approved BSD 3-Clause License.
* See http://ncip.github.com/lexevs-grid/LICENSE.txt for details.
*/
package org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.service.globus;

import org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.service.CodedNodeSetImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the LexBIGCaGridServicesImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.1
 * 
 */
public class CodedNodeSetProviderImpl{
	
	CodedNodeSetImpl impl;
	
	public CodedNodeSetProviderImpl() throws RemoteException {
		impl = new CodedNodeSetImpl();
	}

    public org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.ResolveToListResponse resolveToList(org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.ResolveToListRequest params) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException {
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.ResolveToListResponse boxedResult = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.ResolveToListResponse();
    boxedResult.setResolvedConceptReferenceList(impl.resolveToList(params.getSetResolutionPolicy().getSetResolutionPolicy()));
    return boxedResult;
  }

    public org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.RestrictToCodesResponse restrictToCodes(org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.RestrictToCodesRequest params) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException {
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.RestrictToCodesResponse boxedResult = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.RestrictToCodesResponse();
    impl.restrictToCodes(params.getCodeList().getConceptReferenceList());
    return boxedResult;
  }

    public org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.IsCodeInSetResponse isCodeInSet(org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.IsCodeInSetRequest params) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException {
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.IsCodeInSetResponse boxedResult = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.IsCodeInSetResponse();
    boxedResult.setCodeExistence(impl.isCodeInSet(params.getCode().getConceptReference()));
    return boxedResult;
  }

    public org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.RestrictToMatchingDesignationsResponse restrictToMatchingDesignations(org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.RestrictToMatchingDesignationsRequest params) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException {
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.RestrictToMatchingDesignationsResponse boxedResult = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.RestrictToMatchingDesignationsResponse();
    impl.restrictToMatchingDesignations(params.getMatchCriteria().getMatchCriteria(),params.getSearchDesignationOption().getSearchDesignationOption(),params.getExtensionIdentification().getExtensionIdentification(),params.getLanguageIdentification().getLanguageIdentification());
    return boxedResult;
  }

    public org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.ResolveResponse resolve(org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.ResolveRequest params) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException {
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.ResolveResponse boxedResult = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.ResolveResponse();
    boxedResult.setResolvedConceptReferencesIteratorReference(impl.resolve(params.getSetResolutionPolicy().getSetResolutionPolicy()));
    return boxedResult;
  }

    public org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.RestrictToStatusResponse restrictToStatus(org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.RestrictToStatusRequest params) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException {
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.RestrictToStatusResponse boxedResult = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.RestrictToStatusResponse();
    impl.restrictToStatus(params.getActiveOption().getActiveOption(),params.getStatus().getStatus());
    return boxedResult;
  }

    public org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.IntersectResponse intersect(org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.IntersectRequest params) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException {
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.IntersectResponse boxedResult = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.IntersectResponse();
    impl.intersect(params.getCodes().getCodedNodeSetReference());
    return boxedResult;
  }

    public org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.UnionResponse union(org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.UnionRequest params) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException {
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.UnionResponse boxedResult = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.UnionResponse();
    impl.union(params.getCodes().getCodedNodeSetReference());
    return boxedResult;
  }

    public org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.DifferenceResponse difference(org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.DifferenceRequest params) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException {
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.DifferenceResponse boxedResult = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.DifferenceResponse();
    impl.difference(params.getCodes().getCodedNodeSetReference());
    return boxedResult;
  }

    public org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.RestrictToPropertiesResponse restrictToProperties(org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.RestrictToPropertiesRequest params) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException {
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.RestrictToPropertiesResponse boxedResult = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.RestrictToPropertiesResponse();
    impl.restrictToProperties(params.getPropertyList().getLocalNameList(),params.getPropertyType().getPropertyType(),params.getLocalNameList2().getLocalNameList(),params.getLocalNameList3().getLocalNameList(),params.getNameAndValueList().getNameAndValueList());
    return boxedResult;
  }

    public org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.RestrictToMatchingPropertiesResponse restrictToMatchingProperties(org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.RestrictToMatchingPropertiesRequest params) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.InvalidServiceContextAccess, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBParameterException {
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.RestrictToMatchingPropertiesResponse boxedResult = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.stubs.RestrictToMatchingPropertiesResponse();
    impl.restrictToMatchingProperties(params.getLocalNameList().getLocalNameList(),params.getPropertyType().getPropertyType(),params.getLocalNameList2().getLocalNameList(),params.getLocalNameList3().getLocalNameList(),params.getNameAndValueList().getNameAndValueList(),params.getMatchCriteria().getMatchCriteria(),params.getExtensionIdentification().getExtensionIdentification(),params.getLanguageIdentification().getLanguageIdentification());
    return boxedResult;
  }

}
