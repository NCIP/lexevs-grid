package org.LexGrid.LexBIG.cagrid.LexEVSGridService.client;

import java.io.InputStream;
import java.rmi.RemoteException;

import javax.xml.namespace.QName;

import org.apache.axis.EngineConfiguration;
import org.apache.axis.client.AxisClient;
import org.apache.axis.client.Stub;
import org.apache.axis.configuration.FileProvider;
import org.apache.axis.message.addressing.EndpointReferenceType;
import org.apache.axis.types.URI.MalformedURIException;

import org.oasis.wsrf.properties.GetResourcePropertyResponse;

import org.globus.gsi.GlobusCredential;

import org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.LexEVSGridServicePortType;
import org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.service.LexEVSGridServiceAddressingLocator;
import org.LexGrid.LexBIG.cagrid.LexEVSGridService.common.LexEVSGridServiceI;
import gov.nih.nci.cagrid.introduce.security.client.ServiceSecurityClient;

/**
 * This class is autogenerated, DO NOT EDIT GENERATED GRID SERVICE ACCESS METHODS.
 *
 * This client is generated automatically by Introduce to provide a clean unwrapped API to the
 * service.
 *
 * On construction the class instance will contact the remote service and retrieve it's security
 * metadata description which it will use to configure the Stub specifically for each method call.
 * 
 * @created by Introduce Toolkit version 1.3
 */
public class LexEVSGridServiceClient extends LexEVSGridServiceClientBase implements LexEVSGridServiceI {	

	public LexEVSGridServiceClient(String url) throws MalformedURIException, RemoteException {
		this(url,null);	
	}

	public LexEVSGridServiceClient(String url, GlobusCredential proxy) throws MalformedURIException, RemoteException {
	   	super(url,proxy);
	}
	
	public LexEVSGridServiceClient(EndpointReferenceType epr) throws MalformedURIException, RemoteException {
	   	this(epr,null);
	}
	
	public LexEVSGridServiceClient(EndpointReferenceType epr, GlobusCredential proxy) throws MalformedURIException, RemoteException {
	   	super(epr,proxy);
	}

	public static void usage(){
		System.out.println(LexEVSGridServiceClient.class.getName() + " -url <service url>");
	}
	
	public static void main(String [] args){
	    System.out.println("Running the Grid Service Client");
		try{
		if(!(args.length < 2)){
			if(args[0].equals("-url")){
			  LexEVSGridServiceClient client = new LexEVSGridServiceClient(args[1]);
			  // place client calls here if you want to use this main as a
			  // test....
			} else {
				usage();
				System.exit(1);
			}
		} else {
			usage();
			System.exit(1);
		}
		} catch (Exception e) {
			e.printStackTrace();
			System.exit(1);
		}
	}

  public org.LexGrid.LexBIG.iso21090.DataModel.Collections.CodingSchemeRenderingList getSupportedCodingSchemes() throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBInvocationException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getSupportedCodingSchemes");
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetSupportedCodingSchemesRequest params = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetSupportedCodingSchemesRequest();
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetSupportedCodingSchemesResponse boxedResult = portType.getSupportedCodingSchemes(params);
    return boxedResult.getCodingSchemeRenderingList();
    }
  }

  public org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.client.CodedNodeSetClient getCodingSchemeConcepts(org.LexGrid.LexBIG.iso21090.DataModel.cagrid.CodingSchemeIdentification codingSchemeIdentification,org.LexGrid.LexBIG.iso21090.DataModel.Core.CodingSchemeVersionOrTag versionOrTag) throws RemoteException, org.apache.axis.types.URI.MalformedURIException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getCodingSchemeConcepts");
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetCodingSchemeConceptsRequest params = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetCodingSchemeConceptsRequest();
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetCodingSchemeConceptsRequestCodingSchemeIdentification codingSchemeIdentificationContainer = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetCodingSchemeConceptsRequestCodingSchemeIdentification();
    codingSchemeIdentificationContainer.setCodingSchemeIdentification(codingSchemeIdentification);
    params.setCodingSchemeIdentification(codingSchemeIdentificationContainer);
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetCodingSchemeConceptsRequestVersionOrTag versionOrTagContainer = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetCodingSchemeConceptsRequestVersionOrTag();
    versionOrTagContainer.setCodingSchemeVersionOrTag(versionOrTag);
    params.setVersionOrTag(versionOrTagContainer);
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetCodingSchemeConceptsResponse boxedResult = portType.getCodingSchemeConcepts(params);
    EndpointReferenceType ref = boxedResult.getCodedNodeSetReference().getEndpointReference();
    return new org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeSet.client.CodedNodeSetClient(ref,getProxy());
    }
  }

  public org.LexGrid.iso21090.codingSchemes.CodingScheme resolveCodingScheme(org.LexGrid.LexBIG.iso21090.DataModel.cagrid.CodingSchemeIdentification codingSchemeIdentification,org.LexGrid.LexBIG.iso21090.DataModel.Core.CodingSchemeVersionOrTag versionOrTag) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"resolveCodingScheme");
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.ResolveCodingSchemeRequest params = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.ResolveCodingSchemeRequest();
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.ResolveCodingSchemeRequestCodingSchemeIdentification codingSchemeIdentificationContainer = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.ResolveCodingSchemeRequestCodingSchemeIdentification();
    codingSchemeIdentificationContainer.setCodingSchemeIdentification(codingSchemeIdentification);
    params.setCodingSchemeIdentification(codingSchemeIdentificationContainer);
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.ResolveCodingSchemeRequestVersionOrTag versionOrTagContainer = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.ResolveCodingSchemeRequestVersionOrTag();
    versionOrTagContainer.setCodingSchemeVersionOrTag(versionOrTag);
    params.setVersionOrTag(versionOrTagContainer);
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.ResolveCodingSchemeResponse boxedResult = portType.resolveCodingScheme(params);
    return boxedResult.getCodingScheme();
    }
  }

  public org.LexGrid.LexBIG.iso21090.DataModel.Collections.ModuleDescriptionList getMatchAlgorithms() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getMatchAlgorithms");
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetMatchAlgorithmsRequest params = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetMatchAlgorithmsRequest();
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetMatchAlgorithmsResponse boxedResult = portType.getMatchAlgorithms(params);
    return boxedResult.getModuleDescriptionList();
    }
  }

  public org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeGraph.client.CodedNodeGraphClient getNodeGraph(org.LexGrid.LexBIG.iso21090.DataModel.cagrid.CodingSchemeIdentification codingSchemeIdentification,org.LexGrid.LexBIG.iso21090.DataModel.Core.CodingSchemeVersionOrTag versionOrTag,org.LexGrid.LexBIG.iso21090.DataModel.cagrid.RelationContainerIdentification relationContainerIdentification) throws RemoteException, org.apache.axis.types.URI.MalformedURIException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getNodeGraph");
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetNodeGraphRequest params = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetNodeGraphRequest();
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetNodeGraphRequestCodingSchemeIdentification codingSchemeIdentificationContainer = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetNodeGraphRequestCodingSchemeIdentification();
    codingSchemeIdentificationContainer.setCodingSchemeIdentification(codingSchemeIdentification);
    params.setCodingSchemeIdentification(codingSchemeIdentificationContainer);
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetNodeGraphRequestVersionOrTag versionOrTagContainer = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetNodeGraphRequestVersionOrTag();
    versionOrTagContainer.setCodingSchemeVersionOrTag(versionOrTag);
    params.setVersionOrTag(versionOrTagContainer);
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetNodeGraphRequestRelationContainerIdentification relationContainerIdentificationContainer = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetNodeGraphRequestRelationContainerIdentification();
    relationContainerIdentificationContainer.setRelationContainerIdentification(relationContainerIdentification);
    params.setRelationContainerIdentification(relationContainerIdentificationContainer);
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetNodeGraphResponse boxedResult = portType.getNodeGraph(params);
    EndpointReferenceType ref = boxedResult.getCodedNodeGraphReference().getEndpointReference();
    return new org.LexGrid.LexBIG.cagrid.LexEVSGridService.CodedNodeGraph.client.CodedNodeGraphClient(ref,getProxy());
    }
  }

  public org.LexGrid.LexBIG.iso21090.DataModel.Collections.SortDescriptionList getSortAlgorithms(java.lang.String context) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getSortAlgorithms");
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetSortAlgorithmsRequest params = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetSortAlgorithmsRequest();
    params.setContext(context);
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetSortAlgorithmsResponse boxedResult = portType.getSortAlgorithms(params);
    return boxedResult.getSortDescriptionList();
    }
  }

  public org.LexGrid.LexBIG.iso21090.DataModel.Collections.ExtensionDescriptionList getGenericExtensions() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getGenericExtensions");
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetGenericExtensionsRequest params = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetGenericExtensionsRequest();
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetGenericExtensionsResponse boxedResult = portType.getGenericExtensions(params);
    return boxedResult.getExtensionDescriptionList();
    }
  }

  public org.LexGrid.LexBIG.cagrid.LexEVSGridService.LexBIGServiceConvenienceMethods.client.LexBIGServiceConvenienceMethodsClient getGenericExtension(org.LexGrid.LexBIG.iso21090.DataModel.cagrid.ExtensionIdentification extensionIdentification) throws RemoteException, org.apache.axis.types.URI.MalformedURIException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getGenericExtension");
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetGenericExtensionRequest params = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetGenericExtensionRequest();
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetGenericExtensionRequestExtensionIdentification extensionIdentificationContainer = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetGenericExtensionRequestExtensionIdentification();
    extensionIdentificationContainer.setExtensionIdentification(extensionIdentification);
    params.setExtensionIdentification(extensionIdentificationContainer);
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetGenericExtensionResponse boxedResult = portType.getGenericExtension(params);
    EndpointReferenceType ref = boxedResult.getLexBIGServiceConvenienceMethodsReference().getEndpointReference();
    return new org.LexGrid.LexBIG.cagrid.LexEVSGridService.LexBIGServiceConvenienceMethods.client.LexBIGServiceConvenienceMethodsClient(ref,getProxy());
    }
  }

  public org.LexGrid.LexBIG.iso21090.DataModel.Collections.ExtensionDescriptionList getFilterExtensions() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getFilterExtensions");
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetFilterExtensionsRequest params = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetFilterExtensionsRequest();
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetFilterExtensionsResponse boxedResult = portType.getFilterExtensions(params);
    return boxedResult.getExtensionDescriptionList();
    }
  }

  public org.LexGrid.LexBIG.cagrid.LexEVSGridService.HistoryService.client.HistoryServiceClient getHistoryService(org.LexGrid.LexBIG.iso21090.DataModel.cagrid.CodingSchemeIdentification codingSchemeIdentification) throws RemoteException, org.apache.axis.types.URI.MalformedURIException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getHistoryService");
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetHistoryServiceRequest params = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetHistoryServiceRequest();
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetHistoryServiceRequestCodingSchemeIdentification codingSchemeIdentificationContainer = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetHistoryServiceRequestCodingSchemeIdentification();
    codingSchemeIdentificationContainer.setCodingSchemeIdentification(codingSchemeIdentification);
    params.setCodingSchemeIdentification(codingSchemeIdentificationContainer);
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetHistoryServiceResponse boxedResult = portType.getHistoryService(params);
    EndpointReferenceType ref = boxedResult.getHistoryServiceReference().getEndpointReference();
    return new org.LexGrid.LexBIG.cagrid.LexEVSGridService.HistoryService.client.HistoryServiceClient(ref,getProxy());
    }
  }

  public org.LexGrid.LexBIG.cagrid.LexEVSGridService.LexBIGServiceMetadata.client.LexBIGServiceMetadataClient getServiceMetadata() throws RemoteException, org.apache.axis.types.URI.MalformedURIException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getServiceMetadata");
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetServiceMetadataRequest params = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetServiceMetadataRequest();
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetServiceMetadataResponse boxedResult = portType.getServiceMetadata(params);
    EndpointReferenceType ref = boxedResult.getLexBIGServiceMetadataReference().getEndpointReference();
    return new org.LexGrid.LexBIG.cagrid.LexEVSGridService.LexBIGServiceMetadata.client.LexBIGServiceMetadataClient(ref,getProxy());
    }
  }

  public org.LexGrid.LexBIG.cagrid.LexEVSGridService.Sort.client.SortClient getSortAlgorithm(org.LexGrid.LexBIG.iso21090.DataModel.cagrid.ExtensionIdentification extensionIdentification) throws RemoteException, org.apache.axis.types.URI.MalformedURIException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getSortAlgorithm");
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetSortAlgorithmRequest params = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetSortAlgorithmRequest();
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetSortAlgorithmRequestExtensionIdentification extensionIdentificationContainer = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetSortAlgorithmRequestExtensionIdentification();
    extensionIdentificationContainer.setExtensionIdentification(extensionIdentification);
    params.setExtensionIdentification(extensionIdentificationContainer);
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetSortAlgorithmResponse boxedResult = portType.getSortAlgorithm(params);
    EndpointReferenceType ref = boxedResult.getSortReference().getEndpointReference();
    return new org.LexGrid.LexBIG.cagrid.LexEVSGridService.Sort.client.SortClient(ref,getProxy());
    }
  }

  public org.LexGrid.LexBIG.cagrid.LexEVSGridService.Filter.client.FilterClient getFilter(org.LexGrid.LexBIG.iso21090.DataModel.cagrid.ExtensionIdentification extensionIdentification) throws RemoteException, org.apache.axis.types.URI.MalformedURIException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getFilter");
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetFilterRequest params = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetFilterRequest();
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetFilterRequestExtensionIdentification extensionIdentificationContainer = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetFilterRequestExtensionIdentification();
    extensionIdentificationContainer.setExtensionIdentification(extensionIdentification);
    params.setExtensionIdentification(extensionIdentificationContainer);
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.GetFilterResponse boxedResult = portType.getFilter(params);
    EndpointReferenceType ref = boxedResult.getFilterReference().getEndpointReference();
    return new org.LexGrid.LexBIG.cagrid.LexEVSGridService.Filter.client.FilterClient(ref,getProxy());
    }
  }

  public org.LexGrid.LexBIG.iso21090.DataModel.cagrid.CodingSchemeCopyRight resolveCodingSchemeCopyright(org.LexGrid.LexBIG.iso21090.DataModel.cagrid.CodingSchemeIdentification codingSchemeIdentification,org.LexGrid.LexBIG.iso21090.DataModel.Core.CodingSchemeVersionOrTag versionOrTag) throws RemoteException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"resolveCodingSchemeCopyright");
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.ResolveCodingSchemeCopyrightRequest params = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.ResolveCodingSchemeCopyrightRequest();
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.ResolveCodingSchemeCopyrightRequestCodingSchemeIdentification codingSchemeIdentificationContainer = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.ResolveCodingSchemeCopyrightRequestCodingSchemeIdentification();
    codingSchemeIdentificationContainer.setCodingSchemeIdentification(codingSchemeIdentification);
    params.setCodingSchemeIdentification(codingSchemeIdentificationContainer);
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.ResolveCodingSchemeCopyrightRequestVersionOrTag versionOrTagContainer = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.ResolveCodingSchemeCopyrightRequestVersionOrTag();
    versionOrTagContainer.setCodingSchemeVersionOrTag(versionOrTag);
    params.setVersionOrTag(versionOrTagContainer);
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.ResolveCodingSchemeCopyrightResponse boxedResult = portType.resolveCodingSchemeCopyright(params);
    return boxedResult.getCodingSchemeCopyRight();
    }
  }

  public org.LexGrid.LexBIG.cagrid.LexEVSGridService.client.LexEVSGridServiceClient setSecurityToken(org.LexGrid.LexBIG.iso21090.DataModel.cagrid.CodingSchemeIdentification codingSchemeIdentification,gov.nih.nci.evs.security.SecurityToken securityToken) throws RemoteException, org.apache.axis.types.URI.MalformedURIException, org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.types.LBException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"setSecurityToken");
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.SetSecurityTokenRequest params = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.SetSecurityTokenRequest();
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.SetSecurityTokenRequestCodingSchemeIdentification codingSchemeIdentificationContainer = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.SetSecurityTokenRequestCodingSchemeIdentification();
    codingSchemeIdentificationContainer.setCodingSchemeIdentification(codingSchemeIdentification);
    params.setCodingSchemeIdentification(codingSchemeIdentificationContainer);
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.SetSecurityTokenRequestSecurityToken securityTokenContainer = new org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.SetSecurityTokenRequestSecurityToken();
    securityTokenContainer.setSecurityToken(securityToken);
    params.setSecurityToken(securityTokenContainer);
    org.LexGrid.LexBIG.cagrid.LexEVSGridService.stubs.SetSecurityTokenResponse boxedResult = portType.setSecurityToken(params);
    EndpointReferenceType ref = boxedResult.getLexEVSGridServiceReference().getEndpointReference();
    return new org.LexGrid.LexBIG.cagrid.LexEVSGridService.client.LexEVSGridServiceClient(ref,getProxy());
    }
  }

  public org.oasis.wsrf.properties.GetMultipleResourcePropertiesResponse getMultipleResourceProperties(org.oasis.wsrf.properties.GetMultipleResourceProperties_Element params) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getMultipleResourceProperties");
    return portType.getMultipleResourceProperties(params);
    }
  }

  public org.oasis.wsrf.properties.GetResourcePropertyResponse getResourceProperty(javax.xml.namespace.QName params) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getResourceProperty");
    return portType.getResourceProperty(params);
    }
  }

  public org.oasis.wsrf.properties.QueryResourcePropertiesResponse queryResourceProperties(org.oasis.wsrf.properties.QueryResourceProperties_Element params) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"queryResourceProperties");
    return portType.queryResourceProperties(params);
    }
  }

}
